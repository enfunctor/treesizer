version: 2

defaults: &defaults
  docker:
  - image: circleci/node:10.12-browsers

build-defaults: &build-defaults
  <<: *defaults
  steps:
  - checkout
  - restore_cache:
      name: Restoring node_modules
      key: node_modules-{{ checksum "package-lock.json" }}
  - run:
      name: Generate .NW_BUILD_VERSION
      command: |
        echo `node -pe "require('./package.json').build.nwVersion"` > .NW_BUILD_VERSION
        echo NW_BUILD_VERSION is `cat .NW_BUILD_VERSION`
  - restore_cache:
      name: Restoring builder cache
      key: nwjs_builder-{{ .Environment.CIRCLE_JOB }}-{{ checksum ".NW_BUILD_VERSION" }}
  - run:
      name: Build
      command: npm run $CIRCLE_JOB
  - save_cache:
      name: Saving builder cache
      key: nwjs_builder-{{ .Environment.CIRCLE_JOB }}-{{ checksum ".NW_BUILD_VERSION" }}
      paths:
      - ~/.nwjs-builder/caches

  - run:
      name: Compress artifacts
      command: |
        VERSION=`node -p "require('./package.json').version"`
        MULTILINED_JOB_NAME=`echo $CIRCLE_JOB|perl -pe 's/-/\n/g'`
        OS_NAME=`echo $MULTILINED_JOB_NAME | sed -n 2p`
        ARCHITECTURE=`echo $MULTILINED_JOB_NAME | sed -n 3p`
        ARTIFACT_NAME=treesizer-$VERSION-`echo $CIRCLE_JOB|sed 's/^build-//g'`

        mkdir artifacts

        for dist_entry in dist/*; do
          if [ $OS_NAME='win' ]; then
            ARTIFACT_PATH=artifacts/$ARTIFACT_NAME.zip
            zip -r $ARTIFACT_PATH $dist_entry
          else
            tar -zcfr $ARTIFACT_PATH $dist_entry
          fi
        done

  - persist_to_workspace:
      root: artifacts
      paths:
      - ./*
jobs:
  prepare:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        key: node_modules-{{ checksum "package-lock.json" }}
    - run:
        name: Install dependencies
        command: if [ ! -d node_modules ]; then npm ci; fi
    - save_cache:
        key: node_modules-{{ checksum "package-lock.json" }}
        paths:
        - node_modules

  build-mac:
    <<: *build-defaults

  build-win:
    <<: *build-defaults

  build-linux:
    <<: *build-defaults

  deploy:
    <<: *defaults
    steps:
    - attach_workspace:
        at: artifacts
    - run: ls artifacts

workflows:
  version: 2
  deploy:
    jobs:
    - prepare
    - build-win:
        requires:
        - prepare
    - build-mac:
        requires:
        - prepare
    - build-linux:
        requires:
        - prepare
    - deploy:
        requires:
        - build-win
        - build-mac
        - build-linux
